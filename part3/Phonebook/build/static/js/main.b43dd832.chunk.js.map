{"version":3,"sources":["services/phones.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","filter","handleFilter","DeleteButton","person","handleDelete","onClick","PersonInfo","name","number","Notification","message","notificationStyle","color","messageColor","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Persons","persons","filterBy","p","toLowerCase","includes","map","key","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","setMessage","setMessageColor","useEffect","phoneService","personsData","event","target","preventDefault","findPerson","find","window","confirm","updatedPerson","setTimeout","catch","personData","concat","error","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b43dd832.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request =  axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteById = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteById }","import React, { useState, useEffect } from 'react'\nimport phoneService from '../services/phones.js'\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.addPerson}>\n                <div>name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n                <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nconst Filter = ({filter, handleFilter}) => {\n    return (\n        <div>\n            filter show with <input value={filter} onChange={handleFilter}/>\n        </div>\n    )\n}\n\n\nconst DeleteButton = ({person, handleDelete}) => {\n    return (\n        <button onClick={() => handleDelete(person)}>delete</button>\n    )\n}\n\n\nconst PersonInfo = ({person, handleDelete}) => {\n    return (\n        <div>\n            <p>{person.name}  {person.number} <DeleteButton person={person} handleDelete={handleDelete}/></p> \n        </div>\n    )\n}\n\n\nconst Notification = ({message, messageColor}) => {\n\n    const notificationStyle = {\n        color: messageColor,\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\n\nconst Persons = ({persons, filterBy, handleDelete}) => {\n    const numbers = () => {\n        // filter the persons by a string filter\n        const personsToShow = persons.filter(p => p.name.toLowerCase().includes(filterBy))\n\n        return personsToShow.map(p => <PersonInfo key={p.name} person={p} handleDelete={handleDelete}/>)\n    }\n\n    return numbers()\n\n}\n\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filterName, setFilterName ] = useState('')\n    const [ message, setMessage ] = useState(null)\n    const [ messageColor, setMessageColor ] = useState(null)\n\n\n    // get data from the server\n    const getData = () => {\n        phoneService\n            .getAll()\n                .then(personsData => setPersons(personsData))\n    }\n    \n    useEffect(getData,[])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilterName(event.target.value.toLowerCase())\n    }\n\n    const handleDelete = (person) => {\n        if (window.confirm(\"Delete \"+person.name)) {\n            phoneService.deleteById(person.id)\n            const newPersons = persons.filter(p => p.id !== person.id)\n            setPersons(newPersons)\n        }\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        // Look for the new name in the persons list to avoid repetition\n        const findPerson = persons.find(p => p.name === newName)\n        if (findPerson) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n                const updatedPerson = {...findPerson, number : newNumber}\n\n                phoneService\n                    .update(updatedPerson.id, updatedPerson)\n                    .then(response => {\n                        // mapping the persons to find out which person changed to replace by the new one\n                        setPersons(persons.map(p => p.id !== response.id ? p : response))\n                    })\n                    .then(() => {\n                        setMessage(`Changed ${newName}`)\n                        setMessageColor('green')\n                        \n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 3500)\n                    })\n                    .catch(() => {\n                        setMessage(\n                            `Information of ${newName} has already been removed from server`\n                        )\n                        setMessageColor('red')\n                        \n                        setPersons(persons.filter(p => p.name !== newName))\n                        \n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 3500)\n                    })\n\n            }   \n            setNewName('')\n            setNewNumber('')\n            return\n        }\n        \n        const newPerson = { name: newName, number: newNumber }\n\n        phoneService.create(newPerson)\n            .then(personData =>setPersons(persons.concat(personData)))\n            .then(() => {\n                setMessage(`Added ${newName}`)\n                setMessageColor('green')\n                \n                setTimeout(() => {\n                    setMessage(null)\n                }, 3500)\n            })\n            .catch(error => {\n                setMessage(error.response.data.message)\n                setMessageColor('red')\n\n                setTimeout(() => {\n                    setMessage(null)\n                }, 4500)\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            \n            <Notification message={message} messageColor={messageColor}/>\n\n            <Filter filter={filterName} handleFilter={handleFilterChange}/>\n            \n            <h3>Add a new</h3>\n            \n            <PersonForm \n                addPerson={addPerson} newName={newName} newNumber={newNumber} \n                handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n            />\n\n            <h2>Numbers</h2>\n\n            <Persons persons={persons} filterBy={filterName} handleDelete={handleDelete}/>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}