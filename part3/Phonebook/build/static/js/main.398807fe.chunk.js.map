{"version":3,"sources":["components/App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","filter","handleFilter","PersonInfo","person","name","number","Persons","persons","filterBy","p","toLowerCase","includes","map","key","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","useEffect","axios","get","then","response","data","event","target","preventDefault","find","window","alert","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"+MAGMA,EAAa,SAACC,GAChB,OACI,6BACI,0BAAMC,SAAUD,EAAME,WAClB,sCAAW,2BAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,oBACxD,wCAAa,2BAAOH,MAAOH,EAAMO,UAAWF,SAAUL,EAAMQ,sBAC5D,6BACI,4BAAQC,KAAK,UAAb,WAQdC,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACrB,OACI,iDACqB,2BAAOT,MAAOQ,EAAQN,SAAUO,MAMvDC,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACI,2BAAIA,EAAOC,KAAX,KAAmBD,EAAOE,SAK5BC,EAAU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAQvB,OAL0BD,EAAQP,QAAO,SAAAS,GAAC,OAAIA,EAAEL,KAAKM,cAAcC,SAASH,MAEnDI,KAAI,SAAAH,GAAC,OAAI,kBAAC,EAAD,CAAYI,IAAKJ,EAAEL,KAAMD,OAAQM,QA0ExDK,EAlEH,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACNR,EADM,KACGS,EADH,OAEkBD,mBAAS,IAF3B,mBAENtB,EAFM,KAEGwB,EAFH,OAGsBF,mBAAS,IAH/B,mBAGNnB,EAHM,KAGKsB,EAHL,OAIwBH,mBAAS,IAJjC,mBAINI,EAJM,KAIMC,EAJN,KAcdC,qBANgB,WACZC,IACKC,IAAI,iCACJC,MAAK,SAAAC,GAAQ,OAAIT,EAAWS,EAASC,WAG5B,IAgClB,OACI,6BACI,yCAEA,kBAAC,EAAD,CAAQ1B,OAAQmB,EAAYlB,aA1BT,SAAC0B,GACxBP,EAAcO,EAAMC,OAAOpC,MAAMkB,kBA2B7B,yCAEA,kBAAC,EAAD,CACInB,UA3BM,SAACoC,GAIf,GAHAA,EAAME,iBAGFtB,EAAQuB,MAAK,SAAArB,GAAC,OAAIA,EAAEL,OAASX,KAI7B,OAHAsC,OAAOC,MAAP,UAAgBvC,EAAhB,mCACAwB,EAAW,SACXC,EAAa,IAIjB,IAAMe,EAAY,CAAE7B,KAAMX,EAASY,OAAQT,GAE3CoB,EAAWT,EAAQ2B,OAAOD,IAC1BhB,EAAW,IACXC,EAAa,KAYiBzB,QAASA,EAASG,UAAWA,EACnDD,iBAxCa,SAACgC,GACtBV,EAAWU,EAAMC,OAAOpC,QAuCoBK,mBApCrB,SAAC8B,GACxBT,EAAaS,EAAMC,OAAOpC,UAsCtB,uCAEA,kBAAC,EAAD,CAASe,QAASA,EAASC,SAAUW,MCvGjDgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.398807fe.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.addPerson}>\n                <div>name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n                <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nconst Filter = ({filter, handleFilter}) => {\n    return (\n        <div>\n            filter show with <input value={filter} onChange={handleFilter}/>\n        </div>\n    )\n}\n\n\nconst PersonInfo = ({person}) => {\n    return (\n        <p>{person.name}  {person.number}</p>\n    )\n}\n\n\nconst Persons = ({persons, filterBy}) => {\n    const numbers = () => {\n        // filter the persons by a string filter\n        const personsToShow = persons.filter(p => p.name.toLowerCase().includes(filterBy))\n\n        return personsToShow.map(p => <PersonInfo key={p.name} person={p}/>)\n    }\n\n    return numbers()\n\n}\n\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filterName, setFilterName ] = useState('')\n\n\n    // get data from the server\n    const getData = () => {\n        axios\n            .get('http://localhost:3001/persons')\n            .then(response => setPersons(response.data))\n    }\n    \n    useEffect(getData,[])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilterName(event.target.value.toLowerCase())\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        // Look for the new name in the persons list to avoid repetition\n        if (persons.find(p => p.name === newName)) {\n            window.alert(`${newName} is already added to phonebook`)\n            setNewName('')\n            setNewNumber('')\n            return\n        }\n        \n        const newPerson = { name: newName, number: newNumber }\n\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            \n            <Filter filter={filterName} handleFilter={handleFilterChange}/>\n            \n            <h3>Add a new</h3>\n            \n            <PersonForm \n                addPerson={addPerson} newName={newName} newNumber={newNumber} \n                handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n            />\n\n            <h2>Numbers</h2>\n\n            <Persons persons={persons} filterBy={filterName}/>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}